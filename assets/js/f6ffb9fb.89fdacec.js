(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{151:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return d}));var n=a(3),o=a(7),i=(a(0),a(157)),r=(a(159),{id:"part-1-overview",title:"Redux \uae30\ubc18, Part 1: Redux Overview",sidebar_label:"Redux Overview",hide_title:!0,description:"The official Fundamentals tutorial for Redux: learn the fundamentals of using Redux"}),s={unversionedId:"tutorials/fundamentals/part-1-overview",id:"tutorials/fundamentals/part-1-overview",isDocsHomePage:!1,title:"Redux \uae30\ubc18, Part 1: Redux Overview",description:"The official Fundamentals tutorial for Redux: learn the fundamentals of using Redux",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/tutorials/fundamentals/part-1-overview.md",slug:"/tutorials/fundamentals/part-1-overview",permalink:"/tutorials/fundamentals/part-1-overview",version:"current",sidebar_label:"Redux Overview",sidebar:"docs",previous:{title:"Redux \ud575\uc2ec, Part 6: Performance and Normalizing Data",permalink:"/tutorials/essentials/part-6-performance-normalization"},next:{title:"Redux \uae30\ubc18, Part 2: Concepts and Data Flow",permalink:"/tutorials/fundamentals/part-2-concepts-data-flow"}},l=[{value:"Introduction",id:"introduction",children:[{value:"How to Read This Tutorial",id:"how-to-read-this-tutorial",children:[]}]},{value:"What is Redux?",id:"what-is-redux",children:[{value:"Why Should I Use Redux?",id:"why-should-i-use-redux",children:[]},{value:"When Should I Use Redux?",id:"when-should-i-use-redux",children:[]},{value:"Redux Libraries and Tools",id:"redux-libraries-and-tools",children:[]}]},{value:"Redux Basics",id:"redux-basics",children:[{value:"The Redux Store",id:"the-redux-store",children:[]},{value:"Redux Core Example App",id:"redux-core-example-app",children:[]},{value:"Data Flow",id:"data-flow",children:[]}]},{value:"What You&#39;ve Learned",id:"what-youve-learned",children:[]},{value:"What&#39;s Next?",id:"whats-next",children:[]}],c={toc:l};function d(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"redux-\uae30\ubc18-part-1-redux-overview"},"Redux \uae30\ubc18, Part 1: Redux Overview"),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"What You'll Learn")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},"What Redux is and why you might want to use it"),Object(i.b)("li",{parentName:"ul"},"The basic pieces that make up a Redux app")))),Object(i.b)("h2",{id:"introduction"},"Introduction"),Object(i.b)("p",null,"Welcome to the Redux \uae30\ubc18 \ud29c\ud1a0\ub9ac\uc5bc! ",Object(i.b)("strong",{parentName:"p"},"This tutorial will introduce you to the core concepts, principles, and patterns for using Redux"),". By the time you finish, you should understand the different pieces that make up a Redux app, how data flows when using Redux, and our standard recommended patterns for building Redux apps."),Object(i.b)("p",null,"In Part 1 of this tutorial, we'll briefly look at a minimal example of a working Redux app to see what the pieces are, and in ",Object(i.b)("a",{parentName:"p",href:"/tutorials/fundamentals/part-2-concepts-data-flow"},"Part 2: Redux Concepts and Data Flow")," we'll look at those pieces in more detail and how data flows in a Redux application."),Object(i.b)("p",null,"Starting in ",Object(i.b)("a",{parentName:"p",href:"/tutorials/fundamentals/part-3-state-actions-reducers"},"Part 3: State, Actions, and Reducers"),", we'll use that knowledge to build a small example app that demonstrates how these pieces fit together and talk about how Redux works in practice. After we finish building the working example app \"by hand\" so that you can see exactly what's happening, we'll talk about some of the standard patterns and abstractions typically used with Redux. Finally, we'll see how these lower-level examples translate into the higher-level patterns that we recommend for actual usage in real applications."),Object(i.b)("h3",{id:"how-to-read-this-tutorial"},"How to Read This Tutorial"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},'This tutorial will teach you "how Redux works"'),", as well as ",Object(i.b)("em",{parentName:"p"},"why")," these patterns exist. Fair warning though - learning the concepts is different from putting them into practice in actual apps."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"The initial code will be less concise than the way we suggest writing real app code"),", but writing it out long-hand is the best way to learn. Once you understand how everything fits together, we'll look at using Redux Toolkit to simplify things. ",Object(i.b)("strong",{parentName:"p"},"Redux Toolkit is the recommended way to build production apps with Redux"),", and is built on all of the concepts that we will look at throughout this tutorial. Once you understand the core concepts covered here, you'll understand how to use Redux Toolkit more efficiently."),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"If you're looking to learn more about how Redux is used to write real-world applications, please see:"),Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/tutorials/fundamentals/part-8-modern-redux"},Object(i.b)("strong",{parentName:"a"},'The "Modern Redux" page in this tutorial')),", which shows how to convert the low-level examples from earlier sections into the modern patterns we do recommend for real-world usage"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/tutorials/essentials/part-1-overview-concepts"},Object(i.b)("strong",{parentName:"a"},'The "Redux \ud575\uc2ec" tutorial')),', which teaches "how to use Redux, the right way" for real-world apps, using our latest recommended patterns and practices.')))),Object(i.b)("p",null,"We've tried to keep these explanations beginner-friendly, but we do need to make some assumptions about what you know already so that we can focus on explaining Redux itself. ",Object(i.b)("strong",{parentName:"p"},"This tutorial assumes that you know"),":"),Object(i.b)("div",{className:"admonition admonition-important alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Prerequisites")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},"Familiarity with ",Object(i.b)("a",{parentName:"li",href:"https://internetingishard.com/"},"HTML & CSS"),"."),Object(i.b)("li",{parentName:"ul"},"Familiarity with ",Object(i.b)("a",{parentName:"li",href:"https://www.taniarascia.com/es6-syntax-and-feature-overview/"},"ES6 syntax and features")),Object(i.b)("li",{parentName:"ul"},"Understanding of ",Object(i.b)("a",{parentName:"li",href:"https://javascript.info/rest-parameters-spread#spread-syntax"},"the array and object spread operators")),Object(i.b)("li",{parentName:"ul"},"Knowledge of React terminology: ",Object(i.b)("a",{parentName:"li",href:"https://reactjs.org/docs/introducing-jsx.html"},"JSX"),", ",Object(i.b)("a",{parentName:"li",href:"https://reactjs.org/docs/state-and-lifecycle.html"},"State"),", ",Object(i.b)("a",{parentName:"li",href:"https://reactjs.org/docs/components-and-props.html"},"Function Components, Props"),", and ",Object(i.b)("a",{parentName:"li",href:"https://reactjs.org/docs/hooks-intro.html"},"Hooks")),Object(i.b)("li",{parentName:"ul"},"Knowledge of ",Object(i.b)("a",{parentName:"li",href:"https://javascript.info/promise-basics"},"asynchronous JavaScript")," and ",Object(i.b)("a",{parentName:"li",href:"https://javascript.info/fetch"},"making AJAX requests"))))),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"If you're not already comfortable with those topics, we encourage you to take some time to become comfortable with them first, and then come back to learn about Redux"),". We'll be here when you're ready!"),Object(i.b)("p",null,"Finally, you should make sure that you have the React and Redux DevTools extensions installed in your browser:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"React DevTools Extension:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en"},"React DevTools Extension for Chrome")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://addons.mozilla.org/en-US/firefox/addon/react-devtools/"},"React DevTools Extension for Firefox")))),Object(i.b)("li",{parentName:"ul"},"Redux DevTools Extension:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=en"},"Redux DevTools Extension for Chrome")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://addons.mozilla.org/en-US/firefox/addon/reduxdevtools/"},"Redux DevTools Extension for Firefox"))))),Object(i.b)("h2",{id:"what-is-redux"},"What is Redux?"),Object(i.b)("p",null,'It helps to understand what this "Redux" thing is in the first place. What does it do? What problems does it help me solve? Why would I want to use it?'),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},'Redux is a pattern and library for managing and updating application state, using events called "actions".')," It serves as a centralized store for state that needs to be used across your entire application, with rules ensuring that the state can only be updated in a predictable fashion."),Object(i.b)("h3",{id:"why-should-i-use-redux"},"Why Should I Use Redux?"),Object(i.b)("p",null,'Redux helps you manage "global" state - state that is needed across many parts of your application.'),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"The patterns and tools provided by Redux make it easier to understand when, where, why, and how the state in your application is being updated, and how your application logic will behave when those changes occur"),". Redux guides you towards writing code that is predictable and testable, which helps give you confidence that your application will work as expected."),Object(i.b)("h3",{id:"when-should-i-use-redux"},"When Should I Use Redux?"),Object(i.b)("p",null,"Redux helps you deal with shared state management, but like any tool, it has tradeoffs. There's more concepts to learn, and more code to write. It also adds some indirection to your code, and asks you to follow certain restrictions. It's a trade-off between short term and long term productivity."),Object(i.b)("p",null,"Redux is more useful when:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"You have large amounts of application state that are needed in many places in the app"),Object(i.b)("li",{parentName:"ul"},"The app state is updated frequently over time"),Object(i.b)("li",{parentName:"ul"},"The logic to update that state may be complex"),Object(i.b)("li",{parentName:"ul"},"The app has a medium or large-sized codebase, and might be worked on by many people")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Not all apps need Redux. Take some time to think about the kind of app you're building, and decide what tools would be best to help solve the problems you're working on.")),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Want to Know More?")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"If you're not sure whether Redux is a good choice for your app, these resources give some more guidance:"),Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("a",{parentName:"strong",href:"https://changelog.com/posts/when-and-when-not-to-reach-for-redux"},"When (and when not) to reach for Redux"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("a",{parentName:"strong",href:"https://blog.isquaredsoftware.com/2017/05/idiomatic-redux-tao-of-redux-part-1/"},"The Tao of Redux, Part 1 - Implementation and Intent"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("a",{parentName:"strong",href:"/faq/general#when-should-i-use-redux"},"Redux FAQ: When should I use Redux?"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},Object(i.b)("a",{parentName:"strong",href:"https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367"},"You Might Not Need Redux")))))),Object(i.b)("h3",{id:"redux-libraries-and-tools"},"Redux Libraries and Tools"),Object(i.b)("p",null,"Redux is a small standalone JS library. However, it is commonly used with several other packages:"),Object(i.b)("h4",{id:"react-redux"},"React-Redux"),Object(i.b)("p",null,"Redux can integrate with any UI framework, and is most frequently used with React. ",Object(i.b)("a",{parentName:"p",href:"https://react-redux.js.org/"},Object(i.b)("strong",{parentName:"a"},"React-Redux"))," is our official package that lets your React components interact with a Redux store by reading pieces of state and dispatching actions to update the store."),Object(i.b)("h4",{id:"redux-toolkit"},"Redux Toolkit"),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://redux-toolkit.js.org"},Object(i.b)("strong",{parentName:"a"},"Redux Toolkit"))," is our recommended approach for writing Redux logic. It contains packages and functions that we think are essential for building a Redux app. Redux Toolkit builds in our suggested best practices, simplifies most Redux tasks, prevents common mistakes, and makes it easier to write Redux applications."),Object(i.b)("h4",{id:"redux-devtools-extension"},"Redux DevTools Extension"),Object(i.b)("p",null,"The ",Object(i.b)("a",{parentName:"p",href:"https://github.com/zalmoxisus/redux-devtools-extension"},Object(i.b)("strong",{parentName:"a"},"Redux DevTools Extension")),' shows a history of the changes to the state in your Redux store over time. This allows you to debug your applications effectively, including using powerful techniques like "time-travel debugging".'),Object(i.b)("h2",{id:"redux-basics"},"Redux Basics"),Object(i.b)("p",null,"Now that you know what Redux is, let's briefly look at the pieces that make up a Redux app and how it works."),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"The rest of the description on this page focuses solely on the Redux core library (the ",Object(i.b)("inlineCode",{parentName:"p"},"redux")," package). We'll talk about the other Redux-related packages as we go through the rest of the tutorial."))),Object(i.b)("h3",{id:"the-redux-store"},"The Redux Store"),Object(i.b)("p",null,"The center of every Redux application is the ",Object(i.b)("strong",{parentName:"p"},"store"),'. A "store" is a container that holds your application\'s global ',Object(i.b)("strong",{parentName:"p"},"state"),"."),Object(i.b)("p",null,"A store is a JavaScript object with a few special functions and abilities that make it different than a plain global object:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"You must never directly modify or change the state that is kept inside the Redux store"),Object(i.b)("li",{parentName:"ul"},"Instead, the only way to cause an update to the state is to create a plain ",Object(i.b)("strong",{parentName:"li"},"action"),' object that describes "something that happened in the application", and then ',Object(i.b)("strong",{parentName:"li"},"dispatch")," the action to the store to tell it what happened."),Object(i.b)("li",{parentName:"ul"},"When an action is dispatched, the store runs the root ",Object(i.b)("strong",{parentName:"li"},"reducer")," function, and lets it calculate the new state based on the old state and the action"),Object(i.b)("li",{parentName:"ul"},"Finally, the store notifies ",Object(i.b)("strong",{parentName:"li"},"subscribers")," that the state has been updated so the UI can be updated with the new data.")),Object(i.b)("h3",{id:"redux-core-example-app"},"Redux Core Example App"),Object(i.b)("p",null,"Let's look at a minimal working example of a Redux app - a small counter application:"),Object(i.b)("iframe",{class:"codesandbox",src:"https://codesandbox.io/embed/dank-architecture-lr7k1?fontsize=14&hidenavigation=1&theme=dark&runonclick=1",title:"redux-fundamentals-core-example",allow:"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb",sandbox:"allow-modals allow-forms allow-popups allow-scripts allow-same-origin"}),Object(i.b)("p",null,"Because Redux is a standalone JS library with no dependencies, this example is written by only loading a single script tag for the Redux library, and uses basic JS and HTML for the UI. In practice, Redux is normally used by ",Object(i.b)("a",{parentName:"p",href:"/introduction/installation"},"installing the Redux packages from NPM"),", and the UI is created using a library like ",Object(i.b)("a",{parentName:"p",href:"https://reactjs.org"},"React"),"."),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},Object(i.b)("a",{parentName:"p",href:"/tutorials/fundamentals/part-5-ui-react"},"Part 5: UI and React")," shows how to use Redux and React together."))),Object(i.b)("p",null,"Let's break this example down into its separate parts to see what's happening."),Object(i.b)("h4",{id:"state-actions-and-reducers"},"State, Actions, and Reducers"),Object(i.b)("p",null,"We start by defining an initial ",Object(i.b)("strong",{parentName:"p"},"state")," value to describe the application:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// Define an initial state value for the app\nconst initialState = {\n  value: 0\n}\n")),Object(i.b)("p",null,"For this app, we're going to track a single number with the current value of our counter."),Object(i.b)("p",null,"Redux apps normally have a JS object as the root piece of the state, with other values inside that object."),Object(i.b)("p",null,"Then, we define a ",Object(i.b)("strong",{parentName:"p"},"reducer")," function. The reducer receives two arguments, the current ",Object(i.b)("inlineCode",{parentName:"p"},"state")," and an\n",Object(i.b)("inlineCode",{parentName:"p"},"action")," object describing what happened. When the Redux app starts up, we don't have any state yet,\nso we provide the ",Object(i.b)("inlineCode",{parentName:"p"},"initialState")," as the default value for this reducer:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// Create a \"reducer\" function that determines what the new state\n// should be when something happens in the app\nfunction counterReducer(state = initialState, action) {\n  // Reducers usually look at the type of action that happened\n  // to decide how to update the state\n  switch (action.type) {\n    case 'counter/incremented':\n      return { ...state, value: state.value + 1 }\n    case 'counter/decremented':\n      return { ...state, value: state.value - 1 }\n    default:\n      // If the reducer doesn't care about this action type,\n      // return the existing state unchanged\n      return state\n  }\n}\n")),Object(i.b)("p",null,"Action objects always have a ",Object(i.b)("inlineCode",{parentName:"p"},"type")," field, which is a string you provide that\nacts as a unique name for the action. The ",Object(i.b)("inlineCode",{parentName:"p"},"type")," should be a readable name so that\nanyone who looks at this code understands what it means. In this case, we use the\nword 'counter' as the first half of our action type, and the second half is a\ndescription of \"what happened\". In this case, our 'counter' was 'incremented', so\nwe write the action type as ",Object(i.b)("inlineCode",{parentName:"p"},"'counter/incremented'"),"."),Object(i.b)("p",null,"Based on the type of the action, we either need to return a brand-new object to\nbe the new ",Object(i.b)("inlineCode",{parentName:"p"},"state")," result, or return the existing ",Object(i.b)("inlineCode",{parentName:"p"},"state")," object if nothing should change.\nNote that we update the state ",Object(i.b)("em",{parentName:"p"},"immutably")," by copying the existing state and updating the\ncopy, instead of modifying the original object directly."),Object(i.b)("h4",{id:"store"},"Store"),Object(i.b)("p",null,"Now that we have a reducer function, we can create a ",Object(i.b)("strong",{parentName:"p"},"store")," instance by\ncalling the Redux library ",Object(i.b)("inlineCode",{parentName:"p"},"createStore")," API."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// Create a new Redux store with the `createStore` function,\n// and use the `counterReducer` for the update logic\nconst store = Redux.createStore(counterReducer)\n")),Object(i.b)("p",null,"We pass the reducer function to ",Object(i.b)("inlineCode",{parentName:"p"},"createStore"),", which uses the reducer function\nto generate the initial state, and to calculate any future updates."),Object(i.b)("h4",{id:"ui"},"UI"),Object(i.b)("p",null,"In any application, the user interface will show existing state on screen. When a user\ndoes something, the app will update its data and then redraw the UI with those values."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// Our \"user interface\" is some text in a single HTML element\nconst valueEl = document.getElementById('value')\n\n// Whenever the store state changes, update the UI by\n// reading the latest store state and showing new data\nfunction render() {\n  const state = store.getState()\n  valueEl.innerHTML = state.value.toString()\n}\n\n// Update the UI with the initial data\nrender()\n// And subscribe to redraw whenever the data changes in the future\nstore.subscribe(render)\n")),Object(i.b)("p",null,"In this small example, we're only using some basic HTML elements as our UI,\nwith a single ",Object(i.b)("inlineCode",{parentName:"p"},"<div>")," showing the current value."),Object(i.b)("p",null,"So, we write a function that knows how to get the latest state from the Redux\nstore using the ",Object(i.b)("inlineCode",{parentName:"p"},"store.getState()")," method, then takes that value and updates the UI to show it."),Object(i.b)("p",null,"The Redux store lets us call ",Object(i.b)("inlineCode",{parentName:"p"},"store.subscribe()")," and pass a subscriber callback function that will be called\nevery time the store is updated. So, we can pass our ",Object(i.b)("inlineCode",{parentName:"p"},"render")," function as the subscriber, and know that\neach time the store updates, we can update the UI with the latest value."),Object(i.b)("p",null,"Redux itself is a standalone library that can be used anywhere. This also means that it can be used with any UI layer."),Object(i.b)("h4",{id:"dispatching-actions"},"Dispatching Actions"),Object(i.b)("p",null,"Finally, we need to respond to user input by creating ",Object(i.b)("strong",{parentName:"p"},"action")," objects that\ndescribe what happened, and ",Object(i.b)("strong",{parentName:"p"},"dispatching")," them to the store. When we call ",Object(i.b)("inlineCode",{parentName:"p"},"store.dispatch(action)"),",\nthe store runs the reducer, calculates the updated state, and runs the subscribers\nto update the UI."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"// Handle user inputs by \"dispatching\" action objects,\n// which should describe \"what happened\" in the app\ndocument.getElementById('increment').addEventListener('click', function () {\n  store.dispatch({ type: 'counter/incremented' })\n})\n\ndocument.getElementById('decrement').addEventListener('click', function () {\n  store.dispatch({ type: 'counter/decremented' })\n})\n\ndocument\n  .getElementById('incrementIfOdd')\n  .addEventListener('click', function () {\n    // We can write logic to decide what to do based on the state\n    if (store.getState().value % 2 !== 0) {\n      store.dispatch({ type: 'counter/incremented' })\n    }\n  })\n\ndocument\n  .getElementById('incrementAsync')\n  .addEventListener('click', function () {\n    // We can also write async logic that interacts with the store\n    setTimeout(function () {\n      store.dispatch({ type: 'counter/incremented' })\n    }, 1000)\n  })\n")),Object(i.b)("p",null,"Here, we'll dispatch the actions that will make the reducer add 1 or\nsubtract 1 from the current counter value."),Object(i.b)("p",null,"We can also write code that only dispatches an action if a certain\ncondition is true, or write some async code that dispatches an action\nafter a delay."),Object(i.b)("h3",{id:"data-flow"},"Data Flow"),Object(i.b)("p",null,"We can summarize the flow of data through a Redux app with this diagram. It represents how:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"actions are dispatched in response to a user interaction like a click"),Object(i.b)("li",{parentName:"ul"},"the store runs the reducer function to calculate a new state"),Object(i.b)("li",{parentName:"ul"},"the UI reads the new state to display the new values")),Object(i.b)("p",null,"(Don't worry if these pieces aren't quite clear yet! Keep this picture in your mind as you go through the rest of this tutorial, and you'll see how the pieces fit together.)"),Object(i.b)("p",null,Object(i.b)("img",{alt:"Redux data flow diagram",src:a(168).default})),Object(i.b)("h2",{id:"what-youve-learned"},"What You've Learned"),Object(i.b)("p",null,"That counter example was small, but it does show all the working pieces of a real Redux app.\n",Object(i.b)("strong",{parentName:"p"},"Everything we'll talk about in the following sections expands on those basic pieces.")),Object(i.b)("p",null,"With that in mind, let's review what we've learned so far:"),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Summary")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Redux is a library for managing global application state"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Redux is typically used with the React-Redux library for integrating Redux and React together"),Object(i.b)("li",{parentName:"ul"},"Redux Toolkit is the recommended way to write Redux logic"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Redux uses several types of code"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("em",{parentName:"li"},"Actions")," are plain objects with a ",Object(i.b)("inlineCode",{parentName:"li"},"type"),' field, and describe "what happened" in the app'),Object(i.b)("li",{parentName:"ul"},Object(i.b)("em",{parentName:"li"},"Reducers")," are functions that calculate a new state value based on previous state + an action"),Object(i.b)("li",{parentName:"ul"},"A Redux ",Object(i.b)("em",{parentName:"li"},"store")," runs the root reducer whenever an action is ",Object(i.b)("em",{parentName:"li"},"dispatched"))))))),Object(i.b)("h2",{id:"whats-next"},"What's Next?"),Object(i.b)("p",null,"Now that you know what the basic pieces of a Redux app are, step ahead to ",Object(i.b)("a",{parentName:"p",href:"/tutorials/fundamentals/part-2-concepts-data-flow"},"Part 2: Redux Concepts and Data Flow"),",\nwhere we'll look at how data flows through a Redux app in more detail."))}d.isMDXComponent=!0},157:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return h}));var n=a(0),o=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=o.a.createContext({}),d=function(e){var t=o.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=d(e.components);return o.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(a),b=n,h=u["".concat(r,".").concat(b)]||u[b]||p[b]||i;return a?o.a.createElement(h,s(s({ref:t},c),{},{components:a})):o.a.createElement(h,s({ref:t},c))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var c=2;c<i;c++)r[c]=a[c];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},158:function(e,t,a){"use strict";a.d(t,"b",(function(){return u})),a.d(t,"a",(function(){return p}));var n=a(0),o=a.n(n);const i=/{\w+}/g,r="{}";function s(e,t){const a=[],n=e.replace(i,(e=>{const n=e.substr(1,e.length-2),i=null==t?void 0:t[n];if(void 0!==i){const e=o.a.isValidElement(i)?i:String(i);return a.push(e),r}return e}));return 0===a.length?e:a.every((e=>"string"==typeof e))?n.split(r).reduce(((e,t,n)=>{var o;return e.concat(t).concat(null!==(o=a[n])&&void 0!==o?o:"")}),""):n.split(r).reduce(((e,t,n)=>[...e,o.a.createElement(o.a.Fragment,{key:n},t,a[n])]),[])}function l({children:e,values:t}){return s(e,t)}var c=a(23);function d({id:e,message:t}){var a;return null!==(a=c[null!=e?e:t])&&void 0!==a?a:t}function u({message:e,id:t},a){var n;return s(null!==(n=d({message:e,id:t}))&&void 0!==n?n:e,a)}function p({children:e,id:t,values:a}){var n;const i=null!==(n=d({message:e,id:t}))&&void 0!==n?n:e;return o.a.createElement(l,{values:a},i)}},159:function(e,t,a){"use strict";a.d(t,"a",(function(){return r}));var n=a(0),o=a.n(n),i=a(158);const r=({children:e,title:t=Object(i.b)({message:"Detailed Explanation"})})=>o.a.createElement("details",{className:"detailed-explanation"},o.a.createElement("summary",null,o.a.createElement("h4",null,t)),e)},168:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/ReduxDataFlowDiagram-49fa8c3968371d9ef6f2a1486bd40a26.gif"}}]);