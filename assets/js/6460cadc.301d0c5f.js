(self.webpackChunk=self.webpackChunk||[]).push([[8391],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,b=d["".concat(s,".").concat(m)]||d[m]||l[m]||a;return n?r.createElement(b,p(p({ref:t},u),{},{components:n})):r.createElement(b,p({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,p=new Array(a);p[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,p[1]=i;for(var c=2;c<a;c++)p[c]=n[c];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9434:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),p=["components"],i={id:"isolating-redux-sub-apps",title:"Isolating Redux Sub-Apps",hide_title:!0},s=void 0,c={unversionedId:"recipes/isolating-redux-sub-apps",id:"recipes/isolating-redux-sub-apps",isDocsHomePage:!1,title:"Isolating Redux Sub-Apps",description:"&nbsp;",source:"@site/i18n/ko/docusaurus-plugin-content-docs/current/recipes/IsolatingSubapps.md",sourceDirName:"recipes",slug:"/recipes/isolating-redux-sub-apps",permalink:"/recipes/isolating-redux-sub-apps",version:"current",frontMatter:{id:"isolating-redux-sub-apps",title:"Isolating Redux Sub-Apps",hide_title:!0},sidebar:"docs",previous:{title:"Implementing Undo History",permalink:"/recipes/implementing-undo-history"},next:{title:"Code Splitting",permalink:"/recipes/code-splitting"}},u=[],l={toc:u};function d(e){var t=e.components,n=(0,o.Z)(e,p);return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"isolating-redux-sub-apps"},"Isolating Redux Sub-Apps"),(0,a.kt)("p",null,"Consider the case of a \u201cbig\u201d app (contained in a ",(0,a.kt)("inlineCode",{parentName:"p"},"<BigApp>")," component)\nthat embeds smaller \u201csub-apps\u201d (contained in ",(0,a.kt)("inlineCode",{parentName:"p"},"<SubApp>")," components):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import React, { Component } from 'react'\nimport SubApp from './subapp'\n\nclass BigApp extends Component {\n  render() {\n    return (\n      <div>\n        <SubApp />\n        <SubApp />\n        <SubApp />\n      </div>\n    )\n  }\n}\n")),(0,a.kt)("p",null,"These ",(0,a.kt)("inlineCode",{parentName:"p"},"<SubApp>"),"s will be completely independent. They won't share data or\nactions, and won't see or communicate with each other."),(0,a.kt)("p",null,"It's best not to mix this approach with standard Redux reducer composition.\nFor typical web apps, stick with reducer composition. For\n\u201cproduct hubs\u201d, \u201cdashboards\u201d, or enterprise software that groups disparate\ntools into a unified package, give the sub-app approach a try."),(0,a.kt)("p",null,"The sub-app approach is also useful for large teams that are divided by product\nor feature verticals. These teams can ship sub-apps independently or in combination\nwith an enclosing \u201capp shell\u201d."),(0,a.kt)("p",null,"Below is a sub-app's root connected component.\nAs usual, it can render more components, connected or not, as children.\nUsually we'd render it in ",(0,a.kt)("inlineCode",{parentName:"p"},"<Provider>")," and be done with it."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"class App extends Component { ... }\nexport default connect(mapStateToProps)(App)\n")),(0,a.kt)("p",null,"However, we don't have to call ",(0,a.kt)("inlineCode",{parentName:"p"},"ReactDOM.render(<Provider><App /></Provider>)"),"\nif we're interested in hiding the fact that the sub-app component is a Redux app."),(0,a.kt)("p",null,"Maybe we want to be able to run multiple instances of it in the same \u201cbigger\u201d app\nand keep it as a complete black box, with Redux being an implementation detail."),(0,a.kt)("p",null,"To hide Redux behind a React API, we can wrap it in a special component that\ninitializes the store in the constructor:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './reducers'\nimport App from './App'\n\nclass SubApp extends Component {\n  constructor(props) {\n    super(props)\n    this.store = createStore(reducer)\n  }\n\n  render() {\n    return (\n      <Provider store={this.store}>\n        <App />\n      </Provider>\n    )\n  }\n}\n")),(0,a.kt)("p",null,"This way every instance will be independent."),(0,a.kt)("p",null,"This pattern is ",(0,a.kt)("em",{parentName:"p"},"not")," recommended for parts of the same app that share data.\nHowever, it can be useful when the bigger app has zero access to the smaller apps' internals,\nand we'd like to keep the fact that they are implemented with Redux as an implementation detail.\nEach component instance will have its own store, so they won't \u201cknow\u201d about each other."))}d.isMDXComponent=!0}}]);